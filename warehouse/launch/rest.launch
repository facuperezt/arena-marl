<launch>
  <!-- For eval we ony use one environment -->
  <arg name="ns_prefix" default="/eval_sim" />

  <!-- Match the number of robots you deploy. E.g. 2 jackals and 2 burgers = 4 robots -->
  <arg name="num_robots" default="1" />

  <!-- the folder name under the path arena-simulation-setup/maps  -->
  <arg name="map_folder_name" default="gridworld" />
  <arg name="map_path" default="$(find arena-simulation-setup)/maps/$(arg map_folder_name)/map.yaml" />




  <node name="grid_vis" pkg="warehouse" type="rviz_visualization.py" output="screen" clear_params="true">
                <param name="map_path" value="$(arg map_path)" />
                <remap from="/gridworld" to="/$(arg ns_prefix)/gridworld" />
                <remap from="/visualization_marker_array" to="/$(arg ns_prefix)/visualization_marker_array" />
                
         </node>
  
  <node name="task_manager_f" pkg="warehouse" type="task_gen1.py" output="screen" clear_params="true">
         <remap from="/gridworld_base" to="/$(arg ns_prefix)/gridworld_base" />
         <remap from="/gridworld" to="/$(arg ns_prefix)/gridworld" />
         </node>

  <!-- map server-->
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_path)">
    <!-- In multi-env training /clock not available, since we only want one map_server, it's clock topic is remapped to /clock -->
    <remap from="/clock" to="/$(arg ns_prefix)/clock" />
  </node>

  <!-- <group if="$(eval arg('train_mode') == false)">
  makes sure that action's will be published according to sim time in eval mode
    <node name="action_publisher" pkg="arena_local_planner_drl" type="action_publisher.py"/>
  </group> -->

  <!-- set the log format -->
  <env name="ROSCONSOLE_FORMAT" value="[${severity} ${time} ${logger}]: ${message}" />

  <!-- Start one evaluation environment -->
  <include file="$(find arena_bringup)/launch/sublaunch_training/marl_single_env_training.launch">
    <arg name="ns" value="eval_sim" />
    <arg name="num_robots" value="$(arg num_robots)" />
  </include>


  <include file="$(find arena_bringup)/launch/visualization_training.launch">
  <arg name="ns" default="sim_1"/>
  <arg name="rviz_file"       default="nav_LP"/>
  <!-- if true use rviz for visualization otherwise use flatland_viz-->
  <arg name="use_rviz" default="true"/>
  </include>

  

</launch>